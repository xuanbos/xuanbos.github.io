<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xxxuan的博客</title>
  
  <subtitle>疲倦的生活里总要有些温柔的梦想。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.xuanbosblog.com/"/>
  <updated>2017-12-11T11:37:33.821Z</updated>
  <id>http://www.xuanbosblog.com/</id>
  
  <author>
    <name>Boshi Xuan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vim编辑器常用指令戳进来！</title>
    <link href="http://www.xuanbosblog.com/2017/12/11/Vim%E7%BC%96%E8%BE%91%E5%99%A8%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4%E6%88%B3%E8%BF%9B%E6%9D%A5%EF%BC%81/"/>
    <id>http://www.xuanbosblog.com/2017/12/11/Vim编辑器常用指令戳进来！/</id>
    <published>2017-12-11T11:38:08.389Z</published>
    <updated>2017-12-11T11:37:33.821Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="Vim编辑器常用指令"><a href="#Vim编辑器常用指令" class="headerlink" title="Vim编辑器常用指令"></a>Vim编辑器常用指令</h2><h2 id="最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。"><a href="#最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。" class="headerlink" title="最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。"></a>最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。</h2><h2 id="Vim是什么？"><a href="#Vim是什么？" class="headerlink" title="Vim是什么？"></a>Vim是什么？</h2><p><img src="https://i.loli.net/2017/12/11/5a2e6d54e164a.jpg" alt="u=535571183,1159650231&amp;fm=27&amp;gp=0.jpg"><br><a id="more"></a><br>Linux世界几乎所有的配置文件都是以纯文本形式存在的，而在所有的Linux发行版系统上都有vi编辑器，因此利用简单的文字编辑软件就能够轻松地修改系统的各种配置了，非常方便。vi就是一种功能强大的文本编辑器，而vim则是高级版的vi，不但可以用不同颜色显示文字内容，还能进行诸如shell脚本、C语言程序编辑等功能，可以作为程序编辑器。</p><p>光标移动<br>操作指令    具体内容<br>h或向左箭头(←)    光标向左移动1个字符<br>j或向下箭头(↓)    光标向下移动1个字符<br>k或向上箭头(↑)    光标向上移动1个字符<br>l或向右箭头(→)    光标向右移动1个字符<br>h或向左箭头(←)    光标向左移动1个字符<br>对以上，若在指令前输入n则移动n位，如30j则表示向下移动30行<br>[ctrl]+[f]    向下移动一页<br>[ctrl]+[b]    向上移动一页<br>[ctrl]+[d]    向下移动半页<br>[ctrl]+[u]    向上移动半页</p><ul><li>光标移动到非空格的下一列</li></ul><ul><li>光标移动到非空格的上一列<br>n    向右移动n位<br>0或功能键[HOME]    移动到这一行的最前面<br>$或功能键[END]    移动到这一行的最后面<br>H    移动到第一行第一个字符<br>G或L    移动到最后一行<br>M    移动到中间一行<br>nG或 :n    移动到第n行<br>gg    移动到第一行<br>搜寻和替代</li></ul><p>操作指令    具体内容<br>/word    向下查询word字段<br>?word    向上查询word字段<br>n    向下重复上一个查询字段<br>N    向上重复上一个查询字段<br>:s/old/new/    将当前行第一个old字段替换为new字段<br>:s/old/new/g    将当前行所有old字段替换为new字段<br>:n,$s/old/new    将第n行开始，到最后一行中的每一行的第一个old字段替换成new字段<br>:n,$s/old/new/g    将从第n行开始，到最后一行中每一行的所有old字段替换成new字段<br>若n为.表示从当前行开始替换<br>:%s/old/new/ 等同于 :g/old/s//new/    替换每一行的第一个 old 为 new<br>:%s/old/new/g 等同于 :g/old/s//new/g    替换每一行中所有 old 为 new<br>:n1,n2s/old/new/g    将n1到n2行中所有的old字段替换成new字段<br>:%s+/oradata/apras/+/user01/apras1+ （使用+ 来 替换 / ）    /oradata/apras/替换成/user01/apras1/<br>:s#vivian/#sky/#使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符    替换当前行第一个 vivian/ 为 sky/<br>删除、复制和粘贴</p><p>操作指令    具体内容<br>x    向后删除一个字符<br>X    向前删除一个字符<br>dd    删除当前行<br>ndd    向下删除n行<br>d1G    删除光标所在到第一行数据<br>dG    删除光标所在到最后一行数据<br>d$    删除光标所在到本行的最后一个字符<br>d0    删除光标所在到本行的第一个字符<br>yy    复制当前行<br>nyy    向下复制n行<br>y1G    复制光标所在行到第一行的所有数据<br>yG    复制光标所在行到最后一行的所有数据<br>y0    复制光标到本行行首的所有数据<br>y$    复制光标到本行行尾的所有数据<br>p    将复制数据粘贴在光标的下一行<br>P    将复制数据粘贴在光标的上一行<br>J    将光标所在行和下一行数据合成一行<br>u    复原上一个动作<br>[ctrl]+r    重做上一次动作<br>其他常用操作</p><p>操作指令    具体内容<br>:w    将编辑的数据储存成另一个档案(类似另存新档)<br>:n1,n2 w [filename]    将 n1 到 n2 的内容储存成 filename 这个档案。<br>:! command    暂时离开 vi 到指令列模式下执行 command 的显示结果,如:! ls ～<br>: r !command    将command命令的执行结果插入到文本当前行的下一行<br>: 3 !command    将文本中第三行的内容输入到命令command中进行处理，并将第三行的内容替换为命令的执行结果<br>：1,3 !command    将文本中第一行到第三行的内容输入到命令command中进行处理，并将第一行到第三行的内容替换为命令的执行结果<br>:3 w !command    将文本中第三行的内容输入到命令command中进行处理，不改变当前编辑文件的内容.<br>：1,3 w !command    将文本中第一行到第三行的内容输入到命令command中进行处理，不改变当前编辑文件的内容<br>：shell    切换到shell，此时vim在后台运行，在shell中输入命令exit，切换回vim<br>多文件编辑</p><p>操作指令    具体内容<br>vim filename1 filename2    同一个窗口显示多个文件（打开后暂时只显示filename1的内容<br>：n    切换到下一个文件<br>：N    切换到上一个文件<br>：n filename2    切换到文件filename2<br>：ls    列出vim打开的所有文件的信息，包括文件名，buffer id等<br>：b2    切换到buffer id为2的buffer<br>:bn    切换到当前buffer的下一个buffer<br>:bp    切换当前buffer的前一个buffer<br>：bd    关闭当前buffer，对应文件也随之关闭<br>：bd2    关闭buffer id为2的buffer，对应文件也随之关闭<br>：e file    打开新文件，但不会分割窗口<br>：sp file    打开新文件，并且将会水平分割窗口<br>：vsp file    打开新文件，并且将会垂直分割窗口</p><hr><p>Bye~</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Vim编辑器常用指令&quot;&gt;&lt;a href=&quot;#Vim编辑器常用指令&quot; class=&quot;headerlink&quot; title=&quot;Vim编辑器常用指令&quot;&gt;&lt;/a&gt;Vim编辑器常用指令&lt;/h2&gt;&lt;h2 id=&quot;最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。&quot;&gt;&lt;a href=&quot;#最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。&quot; class=&quot;headerlink&quot; title=&quot;最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。&quot;&gt;&lt;/a&gt;最近又在接触Vim，东西太多记不住，所以写在博客里，忘记了可以拿出来翻翻。&lt;/h2&gt;&lt;h2 id=&quot;Vim是什么？&quot;&gt;&lt;a href=&quot;#Vim是什么？&quot; class=&quot;headerlink&quot; title=&quot;Vim是什么？&quot;&gt;&lt;/a&gt;Vim是什么？&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/11/5a2e6d54e164a.jpg&quot; alt=&quot;u=535571183,1159650231&amp;amp;fm=27&amp;amp;gp=0.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Vim" scheme="http://www.xuanbosblog.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>一脸茫然地学习JAVA编程类和对象</title>
    <link href="http://www.xuanbosblog.com/2017/12/05/%E4%B8%80%E8%84%B8%E8%8C%AB%E7%84%B6%E5%9C%B0%E5%AD%A6%E4%B9%A0JAVA%E7%BC%96%E7%A8%8B%E7%B1%BB%E5%92%8C%E5%AF%B9%E8%B1%A1/"/>
    <id>http://www.xuanbosblog.com/2017/12/05/一脸茫然地学习JAVA编程类和对象/</id>
    <published>2017-12-05T11:25:31.675Z</published>
    <updated>2017-12-05T11:25:19.713Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>1.如何实例化对象？（创建对象）</p><p>类名 对象名= new 类名（);<br>类必须先定义再使用。类是创建对象的模板，创建对象也叫类的实例化。<br><img src="https://i.loli.net/2017/12/05/5a2680e601d3e.jpg" alt="u=1553649747,138666265&amp;fm=27&amp;gp=0.jpg"><br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class Person &#123;</span><br><span class="line">//类的属性</span><br><span class="line">public String name;</span><br><span class="line">public String sex;</span><br><span class="line">public int age;</span><br><span class="line">public void drink() &#123;</span><br><span class="line">System.out.println(&quot;人渴的时候要喝水&quot;);</span><br><span class="line">&#125;</span><br><span class="line">//类的方法</span><br><span class="line">public void eat() &#123;</span><br><span class="line">System.out.println(&quot;人饿的时候要吃饭&quot;);</span><br><span class="line">&#125;</span><br><span class="line">public void running() &#123;</span><br><span class="line">System.out.println(&quot;人难过的时候要跑步&quot;);</span><br><span class="line">&#125;</span><br><span class="line">public static void main(String[] args) &#123;//主函数</span><br><span class="line">// TODO Auto-generated method stub</span><br><span class="line">Person m = new Person(); //对象实例化</span><br><span class="line">m.drink();//调用类的方法</span><br><span class="line">m.eat();</span><br><span class="line">m.running();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.构造方法<br>语法规则：<br>方法名与类名相同；<br>不要返回类型（例如return、void等）；<br>不能被static、final、native、abstract和synchronized修饰，不能被子类继承。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class Sample &#123;</span><br><span class="line"></span><br><span class="line">private int x;</span><br><span class="line">public Sample() &#123;//无参构造方法</span><br><span class="line">this(28);</span><br><span class="line">&#125;</span><br><span class="line">public Sample(int x) &#123;//带参数的构造方法</span><br><span class="line">this.x=x;</span><br><span class="line">&#125;</span><br><span class="line">public int Sample(int x) &#123;</span><br><span class="line">return x+1;//不能有返回值 ！ 不是构造方法</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public class Mystery &#123;  </span><br><span class="line">    private String s;  </span><br><span class="line">      </span><br><span class="line">    public void Mystery() &#123; //不是构造方法  </span><br><span class="line">    s = &quot;constructor&quot;;  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    void go() &#123;  </span><br><span class="line">    System.out.println(s);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">    public static void main(String[] args) &#123;  </span><br><span class="line">    Mystery m = new Mystery();  </span><br><span class="line">    m.go();  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序结果为：null，Mystery m = new Mystery();调用了Mystery 类的构造方法，但是public void Mystery()并不是构造方法，他只是一个普通的实例方法而已,那该类的构造方法哪去了呢？<br>java语言中规定每个类至少要有一个构造方法,为了保证这一点，当用户没有给java类定义明确的构造方法的时候,java为我们提供了一个默认的构造方法,这个构造方法没有参数,修饰符是public并且方法体为空。如果用户有定义构造方法，就不会有默认构造方法！！！<br>其实默认的构造方法还分为两种,一种就是刚刚说过的隐藏的构造方法,另一种就是显示定义的默认构造方法.<br>如果一个类中定义了一个或者多个构造方法,并且每一个构造方法都是带有参数形式的,那么这个类就没有默认的构造方法,看下面的例子。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">public class Sample1&#123;&#125;  </span><br><span class="line">  </span><br><span class="line">public class Sample2&#123;  </span><br><span class="line">    public Sample2(int a)&#123;System.out.println(&quot;My Constructor&quot;);&#125;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">public class Sample3&#123;  </span><br><span class="line">    public Sample3()&#123;System.out.println(&quot;My Default Constructor&quot;);&#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Sample1有一个隐式的默认构造方法,下列语句Sample1 s1=new Sample()合法;<br>Sample2没有默认的构造方法,下列语句Sample2 s2=new Sample2()不合法,执行会编译错误<br>Sample3有一个显示的默认构造方法,所以以下语句Sample3  s3=new Sample3();合法。</p><p>构造方法<br>public(修饰符) class（定义类的关键字） Test（类名）(){<br>//无参<br>Test（类名）（）{    }<br>//带一个参数<br>Test（类名）（String(变量类型) name（变量名））{    }</p><p>}<br>一般方法：<br>定义类：<br>public(修饰符) class（定义类的关键字） Test（类名）(){<br>      private(修饰符) static(修饰符) String(变量类型) s（变量名） = “hello world”;<br>下面是方法的定义<br>      public(修饰符)  static(修饰符)  void(返回值类型)  main（方法名）（String[] args（参数）){<br>             System.out.println(s);（代码语句）<br>      }<br>}<br>不同点：<br>构造方法：</p><p>构造方法在创建的时候就给对象初始化；<br>一个对象建立构造方法只能运行一次；<br>一般方法：</p><p>一般方法是对象调用才执行，给对象添加对象具备的功能；<br>一般方法可以被对象多次调用；<br><img src="https://i.loli.net/2017/12/05/5a26819793fbf.gif" alt="18550000d040bbe22261.gif"></p><p>Bye~</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.如何实例化对象？（创建对象）&lt;/p&gt;
&lt;p&gt;类名 对象名= new 类名（);&lt;br&gt;类必须先定义再使用。类是创建对象的模板，创建对象也叫类的实例化。&lt;br&gt;&lt;img src=&quot;https://i.loli.net/2017/12/05/5a2680e601d3e.jpg&quot; alt=&quot;u=1553649747,138666265&amp;amp;fm=27&amp;amp;gp=0.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.xuanbosblog.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>RedHat Linux下本地yum源配置</title>
    <link href="http://www.xuanbosblog.com/2017/12/03/RedHat%20Linux%E4%B8%8B%E6%9C%AC%E5%9C%B0yum%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.xuanbosblog.com/2017/12/03/RedHat Linux下本地yum源配置/</id>
    <published>2017-12-03T07:45:52.891Z</published>
    <updated>2017-12-03T08:06:57.689Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><img src="https://i.loli.net/2017/12/03/5a23acb4e4d41.jpg" alt="timg (2).jpg"><br><a id="more"></a></p><ol><li>确保Linx虚拟机连接镜像（右击连接）<br><img src="https://i.loli.net/2017/12/03/5a23a6bc63b66.png" alt=")L%NQ$J5D@GVXQ9{N11P@01.png"><br>2.查看挂载点<br>在终端输入mount命令<br><img src="https://i.loli.net/2017/12/03/5a23a72be6b87.png" alt="O(}_R(2RA7_SDKX`~KX4}S3.png"><br>在下面找到镜像的位置 /dev/sr0<br><img src="https://i.loli.net/2017/12/03/5a23b05e55bba.png" alt="a.png"><br>3.创建个挂载目录<br>  mkdir /media/cdrom<br><img src="https://i.loli.net/2017/12/03/5a23a87a680ce.png" alt="$J5DF_MJ8{}QO2HP~SU8C71.png"><br>  将dev/sr0挂载到创建的挂载目录<br>  命令mount/dev/sr0/meida/cdrom<br><img src="https://i.loli.net/2017/12/03/5a23b05e57b47.png" alt="q.png"><br>4.进入 etc/yum.respos.d<br>创建一个新文件 名为:rhe17.repo <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[rhe17]</span><br><span class="line">name=rhe17</span><br><span class="line">baseurl=file:///media/cdrom</span><br><span class="line">enable=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://i.loli.net/2017/12/03/5a23aa02ddc25.png" alt="{L5_32KR5AHHSKGY$EN)1ZC.png"></p><p>测试yum是否成功配置<br>我们可以用yum装个bind试试<br><img src="https://i.loli.net/2017/12/03/5a23ae48802f0.png" alt="5a23ab5c491c0.png"><br>此时我们的yum配置成功!</p><h2 id="bye"><a href="#bye" class="headerlink" title="bye~"></a>bye~</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/03/5a23acb4e4d41.jpg&quot; alt=&quot;timg (2).jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://www.xuanbosblog.com/tags/Linux/"/>
    
      <category term="Yum" scheme="http://www.xuanbosblog.com/tags/Yum/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现折半查找</title>
    <link href="http://www.xuanbosblog.com/2017/12/03/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%8A%98%E5%8D%8A%E6%9F%A5%E6%89%BE/"/>
    <id>http://www.xuanbosblog.com/2017/12/03/C语言实现折半查找/</id>
    <published>2017-12-03T07:10:30.334Z</published>
    <updated>2017-12-03T07:11:32.966Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="折半查找法："><a href="#折半查找法：" class="headerlink" title="折半查找法："></a>折半查找法：</h2><p>在有序表中，把待查找数据值与查找范围的中间元素值进行比较，会有三种情况出现：<br>1）     待查找数据值与中间元素值正好相等，则放回中间元素值的索引。<br>2）     待查找数据值比中间元素值小，则以整个查找范围的前半部分作为新的查找范围，执行1），直到找到相等的值。<br><a id="more"></a><br>3）     待查找数据值比中间元素值大，则以整个查找范围的后半部分作为新的查找范围，执行1），直到找到相等的值<br>4）     如果最后找不到相等的值，则返回错误提示信息。</p><h2 id="代码如下"><a href="#代码如下" class="headerlink" title="代码如下:"></a>代码如下:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int num[13]=&#123;2,12,25,30,44,50,125,130,150,166,170,182,190&#125;;</span><br><span class="line">int mid;  #中间值</span><br><span class="line">int left=0; #左值</span><br><span class="line">int right=12;#右值</span><br><span class="line">int x;</span><br><span class="line">printf(&quot;请输入要查找的数字:&quot;); </span><br><span class="line">scanf(&quot;%d&quot;,&amp;x);</span><br><span class="line">mid=(right+left)/2;</span><br><span class="line">while (left&lt;=right)</span><br><span class="line">&#123;</span><br><span class="line">if(num[mid]==x)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%d\n&quot;,mid+1);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">else if(num[mid]&gt;x)</span><br><span class="line">&#123;</span><br><span class="line">right=mid-1;</span><br><span class="line">mid=(right+left)/2;&#125;</span><br><span class="line">else</span><br><span class="line">&#123;left=mid+1;</span><br><span class="line">mid=(right+left)/2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">if(left&gt;right)</span><br><span class="line">printf(&quot;没有找到该数字\n&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps： 电脑连不上学校CMCC 电脑放在阳台连teacher网也是没谁了<br><img src="https://i.loli.net/2017/12/03/5a23a32a58a15.jpg" alt="QQ图片20171203150816.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;折半查找法：&quot;&gt;&lt;a href=&quot;#折半查找法：&quot; class=&quot;headerlink&quot; title=&quot;折半查找法：&quot;&gt;&lt;/a&gt;折半查找法：&lt;/h2&gt;&lt;p&gt;在有序表中，把待查找数据值与查找范围的中间元素值进行比较，会有三种情况出现：&lt;br&gt;1）     待查找数据值与中间元素值正好相等，则放回中间元素值的索引。&lt;br&gt;2）     待查找数据值比中间元素值小，则以整个查找范围的前半部分作为新的查找范围，执行1），直到找到相等的值。&lt;br&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://www.xuanbosblog.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>如何理解李志《这个世界会好吗》</title>
    <link href="http://www.xuanbosblog.com/2017/12/03/%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E6%9D%8E%E5%BF%97%E3%80%8A%E8%BF%99%E4%B8%AA%E4%B8%96%E7%95%8C%E4%BC%9A%E5%A5%BD%E5%90%97%E3%80%8B/"/>
    <id>http://www.xuanbosblog.com/2017/12/03/如何理解李志《这个世界会好吗》/</id>
    <published>2017-12-03T04:40:59.233Z</published>
    <updated>2017-12-03T04:43:37.269Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><ul><li>我应该是从2016年年初知道李志这个人的，网易云的歌单推送，喜欢李志完全是因为这首歌开始的，然后无法自拔，他的每首歌都被我听了个遍，但唯独《这个世界会好吗》对我感触最大。难受的时候总是单曲循环走一波。<embed src="//music.163.com/style/swf/widget.swf?sid=26523123&type=2&auto=1&width=320&height=66" width="340" height="86" allownetworking="all"></li><li><p><img src="https://i.loli.net/2017/12/03/5a2357cdd9be9.jpg" alt="v2-43964277202f1e3d6bb3fa0732e636a9_hd.jpg"><br>-</p><a id="more"></a><blockquote><p> 今年有很多可怕的事情发生。豫章书院的事情，不明白为什么会有这么不理智的父母有一个男子的父亲被撞，肇事者教科书般的耍赖有北电性侵案有江歌案还有红黄蓝幼儿园的事件一桩桩一件件无不让人感到恶寒但是事到如今这些事件也终于被摆到台面上了，被舆论推动着往前走只希望在每一件事情解决之前大家不要淡漠对他们的关注这个世界一定还能好的80后90后曾经叫嚣着改变世界，如今我们都已经长大，虽然力量渺小，但我们用着我们的方式在慢慢改变世界我今年刚刚踏入大学校园，才发现这里不像想象中安全美好，这里有校外的变态安全问题层出不穷，但这里也有说着一定会保护我们的督察队我们这代人，曾经稚嫩的说着要改变世界，如今我们虽然不够强大，但是我们也都在做着力所能及的事情我们努力的扩散这些事情，热搜被撤就换个词再上，不让这些可怕的事情石沉大海下一代人我们会保护好她们不让他们再受到伤害，本来孩子就最应该被这个世界温柔以待虽然这些话会有人觉得幼稚，但我还是相信这个世界还会好的。</p></blockquote></li><li><p>青年们生活在边缘的世界，没有出路，绝望且压抑。</p></li><li>在需要英雄的时代我们都远非英雄，在小恶与恶的日常选择中盗亦有道</li><li>这首歌已下架，看这个世界的某个角落暂时是不会好了，但是我还是要积极乐观~<br><img src="https://i.loli.net/2017/12/03/5a2358a031087.jpg" alt="91b8f61f3a292df50b310e8eb7315c6035a87315.jpg"><br><img src="https://i.loli.net/2017/12/03/5a2358aed10ff.jpg" alt="ac213f12b31bb051f6486ab6307adab44bede092.jpg"><br><img src="https://i.loli.net/2017/12/03/5a2358d6b610b.jpg" alt="timg.jpg"><br>date:2017-12-03 12:42:42</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;我应该是从2016年年初知道李志这个人的，网易云的歌单推送，喜欢李志完全是因为这首歌开始的，然后无法自拔，他的每首歌都被我听了个遍，但唯独《这个世界会好吗》对我感触最大。难受的时候总是单曲循环走一波。&lt;embed src=&quot;//music.163.com/style/swf/widget.swf?sid=26523123&amp;type=2&amp;auto=1&amp;width=320&amp;height=66&quot; width=&quot;340&quot; height=&quot;86&quot; allownetworking=&quot;all&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/03/5a2357cdd9be9.jpg&quot; alt=&quot;v2-43964277202f1e3d6bb3fa0732e636a9_hd.jpg&quot;&gt;&lt;br&gt;-&lt;/p&gt;
    
    </summary>
    
    
      <category term="music" scheme="http://www.xuanbosblog.com/tags/music/"/>
    
  </entry>
  
  <entry>
    <title>Win10下Java环境变量配置</title>
    <link href="http://www.xuanbosblog.com/2017/12/01/Java%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.xuanbosblog.com/2017/12/01/Java环境变量配置/</id>
    <published>2017-12-01T08:17:19.000Z</published>
    <updated>2017-12-01T10:06:54.504Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="1-首先你要在电脑上安装好-Java-的-JDK"><a href="#1-首先你要在电脑上安装好-Java-的-JDK" class="headerlink" title=" 1. 首先你要在电脑上安装好 Java 的 JDK"></a> 1. 首先你要在电脑上安装好 Java 的 JDK</h2><p>   我安装的是 jdk-8u144-windows-i586.exe</p><h2 id="2-java环境配置"><a href="#2-java环境配置" class="headerlink" title="2. java环境配置"></a>2. java环境配置</h2><a id="more"></a><p>  在电脑桌面 右键点击 “此电脑”的“属性”选项<br>  然后选择高级系统设置<br>   点击高级变量<br> <img src="https://i.loli.net/2017/12/01/5a210cda42b6a.png" alt="9RY)XWYA[J5E8[Z)9DD$6)3.png](https://i.loli.net/2017/12/01/5a210c5ee1eee.png)点击“环境变量”选项![IK~FEQD]0HT)`@TQV9@~E8K.png"><br>点击“系统变量”下面的”新建“选项<br><img src="https://i.loli.net/2017/12/01/5a210d313665e.png" alt="9$_TX8VI$1HBA]HGA]MK5LE.png"><br>在”变量名“处填上”Java<em>Home“”变量值“为JDK安装路径，我的路径是”C:\java\jdk“点击”确定“选项<br>![MYCRHJS</em>~886}3RE7W<a href="https://i.loli.net/2017/12/01/5a210ddbe9702.png" target="_blank" rel="noopener">(BQ.png</a><br><img src="https://i.loli.net/2017/12/01/5a21278c34859.png" alt="805379-20160512223838546-1858485630.png"><br>在”系统变量“中找到”CLASSPATH(没有就新建一个)“点击”编辑“选项将引号里面的全部复制“.;%Java_Home%\bin;%Java_Home%\lib\dt.jar;%Java_Home%\lib\tools.jar”<br><img src="https://i.loli.net/2017/12/01/5a212924993cd.png" alt="H}43TH@H(YXUF7251345W6.png"><br>在”系统变量“中找到”Path“点击”编辑“选项将引号里面的全部复制“%Java_Home%\bin;%Java_Home%\jre\bin;”，到“变量值”栏的最前面，“确定”<br><img src="https://i.loli.net/2017/12/01/5a210e8d84b71.png" alt="P56L5CEEQGSJ@UK]SEN)BMY.png"></p><h2 id="3-检查Java环境是否配置成功"><a href="#3-检查Java环境是否配置成功" class="headerlink" title="3. 检查Java环境是否配置成功"></a>3. 检查Java环境是否配置成功</h2><p>打开CMD 输入java 和javac<br><img src="https://i.loli.net/2017/12/01/5a210f456abc8.png" alt="A~R{KE)$1}BXTAUBKK_@%%X.png"><br><img src="https://i.loli.net/2017/12/01/5a210f725d574.png" alt="EMXBB3XX(%{V46T4_G6P`7C.png"></p><p>恭喜你完成了环境配置~</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-首先你要在电脑上安装好-Java-的-JDK&quot;&gt;&lt;a href=&quot;#1-首先你要在电脑上安装好-Java-的-JDK&quot; class=&quot;headerlink&quot; title=&quot; 1. 首先你要在电脑上安装好 Java 的 JDK&quot;&gt;&lt;/a&gt; 1. 首先你要在电脑上安装好 Java 的 JDK&lt;/h2&gt;&lt;p&gt;   我安装的是 jdk-8u144-windows-i586.exe&lt;/p&gt;
&lt;h2 id=&quot;2-java环境配置&quot;&gt;&lt;a href=&quot;#2-java环境配置&quot; class=&quot;headerlink&quot; title=&quot;2. java环境配置&quot;&gt;&lt;/a&gt;2. java环境配置&lt;/h2&gt;
    
    </summary>
    
    
      <category term="java" scheme="http://www.xuanbosblog.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>C语言实现冒泡排序</title>
    <link href="http://www.xuanbosblog.com/2017/11/28/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    <id>http://www.xuanbosblog.com/2017/11/28/C语言实现冒泡排序/</id>
    <published>2017-11-28T10:18:23.000Z</published>
    <updated>2017-11-28T10:23:43.332Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>冒泡排序：<br>冒泡排序的的优点是好理解，稳定，再就是空间复杂度低，不需要额外开辟数组元素的临时保存控件，当然了，编写起来也容易。<br><a id="more"></a><br>其算法很简单，就是比较数组相邻的两个值，把大的像泡泡一样“冒”到数组后面去，一共要执行N的平方除以2这么多次的比较和交换的操作（N为数组元素），其复杂度为Ο(n²)，如图：<br><img src="https://i.loli.net/2017/11/28/5a1d36e5d2fd4.png" alt="ds_sort_bubbler.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">从小到大升序排列</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">inta[]=&#123;8,4,10,12,9&#125;;</span><br><span class="line">int i,j,k;</span><br><span class="line">for(i=0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j=0;j&lt;5-i;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(a[j]&gt;a[j+1])</span><br><span class="line">&#123;k=a[j+1];</span><br><span class="line">a[j+1]=a[j];</span><br><span class="line">a[j]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;for (i&lt;0;i&lt;5;i++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%5d&quot;,a[i]); </span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">从大到小降序排列</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[6]=&#123;10,8,9,4,5,6&#125;;</span><br><span class="line">int i,j,k;</span><br><span class="line">for(i=0;i&lt;6;i++)</span><br><span class="line">&#123;</span><br><span class="line">for (j=0;j&lt;j-i;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(a[j]&lt;a[j+1])</span><br><span class="line">&#123;</span><br><span class="line">k=a[j+1];</span><br><span class="line">a[j+1]=a[j];</span><br><span class="line">a[j]=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;6;i++)</span><br><span class="line">&#123;printf(&quot;%3d&quot;,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;冒泡排序：&lt;br&gt;冒泡排序的的优点是好理解，稳定，再就是空间复杂度低，不需要额外开辟数组元素的临时保存控件，当然了，编写起来也容易。&lt;br&gt;
    
    </summary>
    
    
      <category term="C语言" scheme="http://www.xuanbosblog.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="冒泡排序" scheme="http://www.xuanbosblog.com/tags/%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>不知不觉十一月即将结束，喝碗鸡汤再溜。</title>
    <link href="http://www.xuanbosblog.com/2017/11/24/%E4%B8%8D%E7%9F%A5%E4%B8%8D%E8%A7%89%E5%8D%81%E4%B8%80%E6%9C%88%E5%8D%B3%E5%B0%86%E7%BB%93%E6%9D%9F%EF%BC%8C%E5%96%9D%E7%A2%97%E9%B8%A1%E6%B1%A4%E5%86%8D%E6%BA%9C%E3%80%82/"/>
    <id>http://www.xuanbosblog.com/2017/11/24/不知不觉十一月即将结束，喝碗鸡汤再溜。/</id>
    <published>2017-11-24T11:59:59.000Z</published>
    <updated>2017-11-24T12:04:19.486Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p><strong>不知不觉十一月即将结束</strong></p><hr><p>时间真的飞快，眨眼还是刚进入相城中专这个学校，一晃现在已经第三年了。我想再不努力就真的要废了！<br><a id="more"></a><br><img src="https://i.loli.net/2017/11/24/5a1803d39a31b.jpg" alt="学校西门口"></p><h2 id="1-如何激励自己学习？"><a href="#1-如何激励自己学习？" class="headerlink" title="1. 如何激励自己学习？"></a>1. 如何激励自己学习？</h2><p>难道你想永远被人踩在脚下吗？<br>每当想放弃的时候请一直记得一句话“你和别人不一样”。<br>比自己优秀的人还在不停的努力，自己又有什么理由虚度光阴？<br>这虽然是一碗浓浓的陈旧鸡汤，但它也是一碗简单粗暴的鸡汤。</p><p>——给自己<br>下图来自网络，侵删。<br><img src="https://i.loli.net/2017/11/24/5a1805eff0da4.jpg" alt="1.jpg"><br><img src="https://i.loli.net/2017/11/24/5a1805f002f80.jpg" alt="2.jpg"><br><img src="https://i.loli.net/2017/11/24/5a1805eff2393.jpg" alt="3.jpg"><br><img src="https://i.loli.net/2017/11/24/5a1805f001d5d.jpg" alt="4.jpg"><br><img src="https://i.loli.net/2017/11/24/5a1805f000170.jpg" alt="5d.jpg"><br><img src="https://i.loli.net/2017/11/24/5a1805efe9daf.jpg" alt="6.jpg"></p><h2 id="2-养成读书的习惯"><a href="#2-养成读书的习惯" class="headerlink" title="2.养成读书的习惯"></a>2.养成读书的习惯</h2><p>读书是一种充实人生的艺术，没有书的人生就像空心的竹子一样，空洞无物。犹太人让孩子们亲吻涂有蜂蜜的书本，是为了让他们记住：书本是甜的，要让甜蜜充满人生就要读书。读书是一本人生最难得的存折，一点一滴地积累，最后你会发现：自己是世界上最富有的人。</p><h2 id="3-关于人际关系"><a href="#3-关于人际关系" class="headerlink" title="3.关于人际关系"></a>3.关于人际关系</h2><p>你可以要求自己守信，但不能要求别人守信；你可以要求自己对人好，但不能期待别人对你好。你怎样对人，并不代表人家就会怎么对你。如果看不透这一点，你只会徒添不必要的烦恼。</p><h2 id="4-关于现实"><a href="#4-关于现实" class="headerlink" title="4.关于现实"></a>4.关于现实</h2><p>现实有太多的不如意，就算生活给你的是垃圾，你同样能把垃圾踩在脚底下登上世界之巅。你要把自己逼出最大的潜能，没有人会为你的未来买单，你要么努力向上爬，要么烂在社会最底层的泥里，这就是生活。</p><h2 id="5-关于孤独"><a href="#5-关于孤独" class="headerlink" title="5.关于孤独"></a>5.关于孤独</h2><p>每个人都要经历一段孤独的日子，每段路都有一段独孤的时光。父母不可能一直帮着你，朋友也不可能一直围着你转。孤独不是孤僻，更不是寂寞。经历过孤独的人，内心更坚强，不管处于什么样的环境都能让自己安静，更好地调整状态，面对环境。                                                                                                                                                                    ——提醒自己</p><hr><p><img src="https://i.loli.net/2017/11/24/5a18093bba384.jpg" alt="adaf2edda3cc7cd9c0e620783201213fb90e9143.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;不知不觉十一月即将结束&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;时间真的飞快，眨眼还是刚进入相城中专这个学校，一晃现在已经第三年了。我想再不努力就真的要废了！&lt;br&gt;
    
    </summary>
    
    
      <category term="鸡汤" scheme="http://www.xuanbosblog.com/tags/%E9%B8%A1%E6%B1%A4/"/>
    
  </entry>
  
  <entry>
    <title>hello,world!功夫不负有心人.</title>
    <link href="http://www.xuanbosblog.com/2017/11/24/hello,world!%E5%8A%9F%E5%A4%AB%E4%B8%8D%E8%B4%9F%E6%9C%89%E5%BF%83%E4%BA%BA/"/>
    <id>http://www.xuanbosblog.com/2017/11/24/hello,world!功夫不负有心人/</id>
    <published>2017-11-24T09:45:18.640Z</published>
    <updated>2017-11-24T10:23:01.630Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><h2 id="从暑假了解github到搭建好属于自己的博客"><a href="#从暑假了解github到搭建好属于自己的博客" class="headerlink" title="从暑假了解github到搭建好属于自己的博客"></a>从暑假了解github到搭建好属于自己的博客</h2><a id="more"></a><p>自从暑假知道世界上有github这个好东西就一直在学习，期间有很多次搭建出现问题想要放弃，（毕竟小白）但想想能拥有自己的博客又不断地尝试。终于在今天成功了！<br><img src="/smile/drink.png" alt="image"></p><h2 id="博客的功能我将慢慢学习然后实现它！"><a href="#博客的功能我将慢慢学习然后实现它！" class="headerlink" title="博客的功能我将慢慢学习然后实现它！"></a>博客的功能我将慢慢学习然后实现它！</h2><p>##如果你也想搭建自己的博客 前期遇到问题可以找我。<br><img src="\assets\img\weixin.png" alt="image"><br>date: 2017-11-17 19:45:42</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;从暑假了解github到搭建好属于自己的博客&quot;&gt;&lt;a href=&quot;#从暑假了解github到搭建好属于自己的博客&quot; class=&quot;headerlink&quot; title=&quot;从暑假了解github到搭建好属于自己的博客&quot;&gt;&lt;/a&gt;从暑假了解github到搭建好属于自己的博客&lt;/h2&gt;
    
    </summary>
    
    
      <category term="hello" scheme="http://www.xuanbosblog.com/tags/hello/"/>
    
      <category term="world" scheme="http://www.xuanbosblog.com/tags/world/"/>
    
  </entry>
  
  <entry>
    <title>上海东方绿舟&quot;冬游&quot;</title>
    <link href="http://www.xuanbosblog.com/2017/11/23/%E4%B8%8A%E6%B5%B7%E4%B8%9C%E6%96%B9%E7%BB%BF%E8%88%9F%E2%80%9C%E5%86%AC%E6%B8%B8%E2%80%9D/"/>
    <id>http://www.xuanbosblog.com/2017/11/23/上海东方绿舟“冬游”/</id>
    <published>2017-11-23T11:01:36.179Z</published>
    <updated>2017-11-24T10:57:54.656Z</updated>
    
    <content type="html"><![CDATA[<script src="\assets\js\APlayer.min.js"> </script><p>从来到我这个学校春游秋游都是下雨的，以为每次游玩校长都变身为雨神“萧敬腾”不过这次却没下雨，天气晴朗！<br><strong>从学校到上海的客车上</strong><br>学会了一个新的扑克玩法“掼蛋”，一路上打了好多把，缺基本全输。</p><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><p>话不多说直接放图 ~东方之舟风景<br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a50711e80.jpg" alt=""><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a624edb73.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a6440159b.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a6af8149e.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a6d96a190.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a7278acf8.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a74a5a8ac.jpg" alt="这里写图片描述"></p><h2 id="武器图片"><a href="#武器图片" class="headerlink" title="武器图片~"></a>武器图片~</h2><p><img src="https://ooo.0o0.ooo/2017/11/23/5a16a7d92b95f.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a7f7b4181.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a808e8ad4.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a8219136a.jpg" alt="这里写图片描述"><br><img src="https://ooo.0o0.ooo/2017/11/23/5a16a8428dae0.jpg" alt="这里写图片描述"></p><hr><h2 id="上海还是有空地的"><a href="#上海还是有空地的" class="headerlink" title="上海还是有空地的"></a>上海还是有空地的</h2><p><img src="https://ooo.0o0.ooo/2017/11/23/5a16a8d90a5a8.jpg" alt="这里写图片描述"></p><p>byebye~<br>date:2017-11-23 18:58:42</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;从来到我这个学校春游秋游都是下雨的，以为每次游玩校长都变身为雨神“萧敬腾”不过这次却没下雨，天气晴朗！&lt;br&gt;&lt;strong&gt;从学校到上海的客车上&lt;/strong&gt;&lt;br&gt;学会了一个新的扑克玩法“掼蛋”，一路上打了好多把，缺基本全输。&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;
    
    </summary>
    
    
      <category term="上海" scheme="http://www.xuanbosblog.com/tags/%E4%B8%8A%E6%B5%B7/"/>
    
      <category term="秋游" scheme="http://www.xuanbosblog.com/tags/%E7%A7%8B%E6%B8%B8/"/>
    
  </entry>
  
</feed>
